<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--引用外部配置文件-->
    <properties resource="config.properties">
        <!--可以在其中增加一些属性配置-->
        <property name="username" value="root"/>
        <property name="password" value="7debug7"/>
        <!--如果两个文件有同一个字段，优先使用外部配置文件-->
    </properties>
    <settings>
        <!--在开发中，我们很多时候需要知道当前执行的sql语句是什么样的，
            但是默认mybatis是不显示sql的，此时我们就可以使用stdout-logging了。-->
        <!--<setting name="logImpl" value="STDOUT_LOGGING"/>-->
        <setting name="logImpl" value="LOG4J"/>
    </settings>

    <!--环境配置（environments）-->
    <environments default="home">
        <environment id="company">
            <!--事务管理器（transactionManager）
            在 MyBatis 中有两种类型的事务管理器（也就是 type="[JDBC|MANAGED]"）-->
            <transactionManager type="JDBC"/>
            <!--数据源（dataSource）
            有三种内建的数据源类型（也就是 type="[UNPOOLED|POOLED|JNDI]"）-->
            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
                <property name="url"
                          value="jdbc:mysql://172.16.230.206:3306/mybatis?useUnicode=true&amp;characterEncoding=UTF-8&amp;useJDBCCompliantTimezoneShift=true&amp;useLegacyDatetimeCode=false&amp;serverTimezone=UTC"/>
                <property name="username" value="root"/>
                <property name="password" value="7debug7"/>
            </dataSource>
        </environment>
        <environment id="home">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>
    <!--映射器（mappers）-->
    <mappers>
        <!-- 方式一：【推荐使用】-->
        <mapper resource="dao/UserMapper.xml"/>
        <!-- 方式二：使用class文件绑定注册-->
        <!-- <mapper class="dao.UserMapper"/>-->
        <!-- 方式三：使用包扫描进行注入-->
        <!-- <package name="dao"/>-->
    </mappers>
</configuration>